{"ast":null,"code":"var _jsxFileName = \"F:\\\\Cegeka\\\\CegekaAcademy_local\\\\c9\\\\local\\\\CegekaAcademyPC2021ReactAssignment\\\\src\\\\components\\\\Main\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router';\nimport * as api from '../../api';\nimport { AlbumList } from '../Album';\nimport { PhotoList } from '../Photo';\nimport { Message } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [albums, setAlbums] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    //if there is no data in local storage, get data from api\n    const localAlbums = localStorage.getItem('albums');\n    const localPhotos = localStorage.getItem('photos');\n\n    if (localAlbums && localPhotos) {\n      setAlbums(JSON.parse(localAlbums));\n      setPhotos(JSON.parse(localPhotos));\n    } else {\n      const albumsResponse = api.getAlbums();\n      const photosResponse = api.getPhotos();\n      setAlbums(albumsResponse);\n      setPhotos(photosResponse);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('albums', JSON.stringify(albums));\n  }, [albums]);\n  useEffect(() => {\n    localStorage.setItem('photos', JSON.stringify(photos));\n  }, [photos]);\n\n  const createAlbum = album => {\n    const timestamp = Date.now();\n    album.id = `album-${timestamp}`;\n    setAlbums(prevAlbums => [...prevAlbums, album]);\n  };\n\n  const editAlbum = (key, updatedAlbum) => {\n    const updatedAlbums = albums.map(album => album.id === key ? updatedAlbum : album);\n    setAlbums(updatedAlbums);\n  };\n\n  const deleteAlbum = key => {\n    const updatedAlbums = albums.filter(album => album.id !== key);\n    setAlbums(updatedAlbums);\n  };\n\n  const createPhoto = photo => {\n    const timestamp = Date.now();\n    photo.id = `photo-${timestamp}`;\n    setPhotos(prevPhotos => [...prevPhotos, photo]);\n  };\n\n  const editPhoto = (key, updatedPhoto) => {\n    const updatedPhotos = photos.map(photo => photo.id === key ? updatedPhoto : photo);\n    setPhotos(updatedPhotos);\n  };\n\n  const deletePhoto = key => {\n    const updatedPhotos = photos.filter(photo => photo.id !== key);\n    setPhotos(updatedPhotos);\n  };\n\n  const albumList = () => /*#__PURE__*/_jsxDEV(AlbumList, {\n    albums: albums,\n    photos: photos,\n    deleteAlbum: deleteAlbum,\n    editAlbum: editAlbum,\n    createAlbum: createAlbum\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 29\n  }, this);\n\n  const photoList = () => /*#__PURE__*/_jsxDEV(PhotoList, {\n    photos: photos,\n    deletePhoto: deletePhoto,\n    editPhoto: editPhoto,\n    createPhoto: createPhoto\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 29\n  }, this);\n\n  const error = () => /*#__PURE__*/_jsxDEV(Message, {\n    icon: \"warning circle\",\n    header: \"Ups.. Error\",\n    content: \"Please go back and try again.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 25\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: albumList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums\",\n      render: albumList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/photos\",\n      render: photoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      render: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"Fj3sg/Eov+VmM8Bdh5XZ54dXVQs=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["F:/Cegeka/CegekaAcademy_local/c9/local/CegekaAcademyPC2021ReactAssignment/src/components/Main/Main.tsx"],"names":["React","useEffect","useState","Switch","Route","api","AlbumList","PhotoList","Message","Main","albums","setAlbums","photos","setPhotos","localAlbums","localStorage","getItem","localPhotos","JSON","parse","albumsResponse","getAlbums","photosResponse","getPhotos","setItem","stringify","createAlbum","album","timestamp","Date","now","id","prevAlbums","editAlbum","key","updatedAlbum","updatedAlbums","map","deleteAlbum","filter","createPhoto","photo","prevPhotos","editPhoto","updatedPhoto","updatedPhotos","deletePhoto","albumList","photoList","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AlbumModel } from '../../models/AlbumModel';\r\nimport { PhotoModel } from '../../models/PhotoModel';\r\nimport { Switch, Route } from 'react-router';\r\nimport * as api from '../../api';\r\nimport { AlbumList } from '../Album';\r\nimport { PhotoList } from '../Photo';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\n\r\n\r\n\r\nconst Main = () =>{\r\n    const [albums, setAlbums] = useState<AlbumModel[]>([]);\r\n    const [photos, setPhotos] = useState<PhotoModel[]>([]);\r\n\r\n    useEffect( () => {\r\n        //if there is no data in local storage, get data from api\r\n        const localAlbums = localStorage.getItem('albums');\r\n        const localPhotos = localStorage.getItem('photos');\r\n        if(localAlbums && localPhotos){\r\n            setAlbums(JSON.parse(localAlbums));\r\n            setPhotos(JSON.parse(localPhotos));\r\n        }else {\r\n            const albumsResponse = api.getAlbums();\r\n            const photosResponse = api.getPhotos();\r\n            setAlbums(albumsResponse);\r\n            setPhotos(photosResponse);\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem(\r\n            'albums', JSON.stringify(albums)\r\n        );\r\n    }, [albums]);\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem(\r\n            'photos', JSON.stringify(photos)\r\n        );\r\n    }, [photos]);\r\n\r\n    const createAlbum = (album: AlbumModel) => {\r\n        const timestamp = Date.now();\r\n        album.id = `album-${timestamp}`;\r\n        setAlbums(prevAlbums => [...prevAlbums, album]);\r\n    }\r\n\r\n    const editAlbum = (key: string, updatedAlbum: AlbumModel) => {\r\n        const updatedAlbums = albums.map(album => album.id === key ? updatedAlbum: album);\r\n        setAlbums(updatedAlbums);\r\n    }\r\n    const deleteAlbum = (key: string) => {\r\n        const updatedAlbums = albums.filter(album => album.id !== key);\r\n        setAlbums(updatedAlbums);\r\n    } \r\n    const createPhoto = (photo: PhotoModel) => {\r\n        const timestamp = Date.now();\r\n        photo.id = `photo-${timestamp}`;\r\n        setPhotos(prevPhotos => [...prevPhotos, photo]);\r\n    }\r\n\r\n    const editPhoto = (key: string, updatedPhoto: PhotoModel) => {\r\n        const updatedPhotos = photos.map(photo => photo.id === key ? updatedPhoto: photo);\r\n        setPhotos(updatedPhotos);\r\n    }\r\n    const deletePhoto = (key : string) => {\r\n        const updatedPhotos = photos.filter(photo => photo.id !== key);\r\n        setPhotos(updatedPhotos);\r\n    }\r\n\r\n    const albumList = () => <AlbumList\r\n                        albums={albums}\r\n                        photos={photos}\r\n                        deleteAlbum={deleteAlbum}\r\n                        editAlbum={editAlbum}\r\n                        createAlbum={createAlbum}\r\n                        />;\r\n    \r\n    const photoList = () => <PhotoList\r\n                            photos={photos}\r\n                            deletePhoto={deletePhoto}\r\n                            editPhoto={editPhoto}\r\n                            createPhoto={createPhoto}\r\n                            />;\r\n    const error = () => <Message \r\n                        icon=\"warning circle\"\r\n                        header=\"Ups.. Error\"\r\n                        content=\"Please go back and try again.\"\r\n                        />;\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={albumList} />\r\n            <Route path=\"/albums\" render={albumList} />\r\n            <Route path=\"/photos\" render ={photoList} />\r\n            <Route render={error} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}